#!/usr/bin/env bash

git config --global user.email "<EMAIL_ADDRESS_OF_ASSOCIATED_GIT_USER>"
git config --global user.name "<USER_NAME_OF_ASSOCIATED_GIT_USER>"

# This specifies the repository we are going to work with.  This will most likely be set to 'ember'
COMPONENTS_EMBER_REPO_SLUG="components/ember"

# This specifies the user who is associated to the GH_TOKEN
USER="<YOUR_USER_HERE>"

# This ensure that no directories within dist will be copied when script is run.
INCLUDED_FILES=`find dist -maxdepth 1 -type f`

echo -e "COMPONENTS_EMBER_REPO_SLUG: ${COMPONENTS_EMBER_REPO_SLUG}\n"
echo -e "INCLUDED_FILES: ${INCLUDED_FILES}\n"
echo -e "CURRENT_BRANCH: ${TRAVIS_BRANCH}\n"

# Set channel to publish to.  If no suitable branch is found exit successfully.
case $TRAVIS_BRANCH in
  "master" )
    CHANNEL="canary" ;;
  "beta" )
    CHANNEL="beta" ;;
  "stable"  )
    CHANNEL="release" ;;
  "release" )
    CHANNEL="release" ;;
  * )
    echo "Not a bower release branch.  Exiting!"
    exit 0 ;;
esac
echo -e "CHANNEL: ${CHANNEL}\n"

# sending output to /dev/null to prevent GH_TOKEN leak on error
git clone https://${USER}:${GH_TOKEN}@github.com/${COMPONENTS_EMBER_REPO_SLUG}.git bower_ember > /dev/null
rm -rf bower_ember/*
cp -r ${INCLUDED_FILES} bower_ember/
cd bower_ember
git remote rm origin

# sending output to /dev/null to prevent GH_TOKEN leak on error
git remote add origin https://${USER}:${GH_TOKEN}@github.com/${COMPONENTS_EMBER_REPO_SLUG}.git > /dev/null
git add -A
git commit -m "Ember bower component auto build for ${TRAVIS_BRANCH}"

# sending output to /dev/null to prevent GH_TOKEN leak on error
git push -fq origin master > /dev/null
echo -e "Done\n"

