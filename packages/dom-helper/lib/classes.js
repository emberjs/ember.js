var doc = typeof document === 'undefined' ? false : document;
// PhantomJS has a broken classList. See https://github.com/ariya/phantomjs/issues/12782
var canClassList = doc && (function () {
    var d = document.createElement('div');
    if (!d.classList) {
        return false;
    }
    d.classList.add('boo');
    d.classList.add('boo', 'baz');
    return (d.className === 'boo baz');
})();
function buildClassList(element) {
    var classString = (element.getAttribute('class') || '');
    return classString !== '' && classString !== ' ' ? classString.split(' ') : [];
}
function intersect(containingArray, valuesArray) {
    var containingIndex = 0;
    var containingLength = containingArray.length;
    var valuesIndex = 0;
    var valuesLength = valuesArray.length;
    var intersection = new Array(valuesLength);
    // TODO: rewrite this loop in an optimal manner
    for (; containingIndex < containingLength; containingIndex++) {
        valuesIndex = 0;
        for (; valuesIndex < valuesLength; valuesIndex++) {
            if (valuesArray[valuesIndex] === containingArray[containingIndex]) {
                intersection[valuesIndex] = containingIndex;
                break;
            }
        }
    }
    return intersection;
}
function addClassesViaAttribute(element, classNames) {
    var existingClasses = buildClassList(element);
    var indexes = intersect(existingClasses, classNames);
    var didChange = false;
    for (var i = 0, l = classNames.length; i < l; i++) {
        if (indexes[i] === undefined) {
            didChange = true;
            existingClasses.push(classNames[i]);
        }
    }
    if (didChange) {
        element.setAttribute('class', existingClasses.length > 0 ? existingClasses.join(' ') : '');
    }
}
function removeClassesViaAttribute(element, classNames) {
    var existingClasses = buildClassList(element);
    var indexes = intersect(classNames, existingClasses);
    var didChange = false;
    var newClasses = [];
    for (var i = 0, l = existingClasses.length; i < l; i++) {
        if (indexes[i] === undefined) {
            newClasses.push(existingClasses[i]);
        }
        else {
            didChange = true;
        }
    }
    if (didChange) {
        element.setAttribute('class', newClasses.length > 0 ? newClasses.join(' ') : '');
    }
}
var addClasses, removeClasses;
if (canClassList) {
    addClasses = function addClasses(element, classNames) {
        if (element.classList) {
            if (classNames.length === 1) {
                element.classList.add(classNames[0]);
            }
            else if (classNames.length === 2) {
                element.classList.add(classNames[0], classNames[1]);
            }
            else {
                element.classList.add.apply(element.classList, classNames);
            }
        }
        else {
            addClassesViaAttribute(element, classNames);
        }
    };
    removeClasses = function removeClasses(element, classNames) {
        if (element.classList) {
            if (classNames.length === 1) {
                element.classList.remove(classNames[0]);
            }
            else if (classNames.length === 2) {
                element.classList.remove(classNames[0], classNames[1]);
            }
            else {
                element.classList.remove.apply(element.classList, classNames);
            }
        }
        else {
            removeClassesViaAttribute(element, classNames);
        }
    };
}
else {
    addClasses = addClassesViaAttribute;
    removeClasses = removeClassesViaAttribute;
}
export { addClasses, removeClasses };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xhc3Nlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9kb20taGVscGVyL2xpYi9jbGFzc2VzLnRzIl0sIm5hbWVzIjpbImJ1aWxkQ2xhc3NMaXN0IiwiaW50ZXJzZWN0IiwiYWRkQ2xhc3Nlc1ZpYUF0dHJpYnV0ZSIsInJlbW92ZUNsYXNzZXNWaWFBdHRyaWJ1dGUiLCJhZGRDbGFzc2VzIiwicmVtb3ZlQ2xhc3NlcyJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSSxHQUFHLEdBQUcsT0FBTyxRQUFRLEtBQUssV0FBVyxHQUFHLEtBQUssR0FBRyxRQUFRLENBQUM7QUFFN0Qsd0ZBQXdGO0FBQ3hGLElBQUksWUFBWSxHQUFHLEdBQUcsSUFBSSxDQUFDO0lBQ3pCLElBQUksQ0FBQyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDdEMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztRQUNqQixNQUFNLENBQUMsS0FBSyxDQUFDO0lBQ2YsQ0FBQztJQUNELENBQUMsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3ZCLENBQUMsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQztJQUM5QixNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxLQUFLLFNBQVMsQ0FBQyxDQUFDO0FBQ3JDLENBQUMsQ0FBQyxFQUFFLENBQUM7QUFFTCx3QkFBd0IsT0FBTztJQUM3QkEsSUFBSUEsV0FBV0EsR0FBR0EsQ0FBQ0EsT0FBT0EsQ0FBQ0EsWUFBWUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsSUFBSUEsRUFBRUEsQ0FBQ0EsQ0FBQ0E7SUFDeERBLE1BQU1BLENBQUNBLFdBQVdBLEtBQUtBLEVBQUVBLElBQUlBLFdBQVdBLEtBQUtBLEdBQUdBLEdBQUdBLFdBQVdBLENBQUNBLEtBQUtBLENBQUNBLEdBQUdBLENBQUNB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